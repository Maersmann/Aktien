// <auto-generated />
using System;
using Aktien.Data.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Aktien.Data.Migrations
{
    [DbContext(typeof(Repository))]
    [Migration("20210120185401_VW6")]
    partial class VW6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Aktien.Data.Model.AktienModels.Aktie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ISIN")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WKN")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Aktie");
                });

            modelBuilder.Entity("Aktien.Data.Model.AktienModels.Dividende", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AktieID")
                        .HasColumnType("integer");

                    b.Property<double>("Betrag")
                        .HasColumnType("double precision");

                    b.Property<double?>("BetragUmgerechnet")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Waehrung")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("AktieID");

                    b.ToTable("Dividende");
                });

            modelBuilder.Entity("Aktien.Data.Model.AktienModels.DividendeErhalten", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AktieID")
                        .HasColumnType("integer");

                    b.Property<int>("Bestand")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DividendeID")
                        .HasColumnType("integer");

                    b.Property<double>("GesamtBrutto")
                        .HasColumnType("double precision");

                    b.Property<double>("GesamtNetto")
                        .HasColumnType("double precision");

                    b.Property<double?>("Quellensteuer")
                        .HasColumnType("double precision");

                    b.Property<double?>("Umrechnungskurs")
                        .HasColumnType("double precision");

                    b.HasKey("ID");

                    b.HasIndex("AktieID");

                    b.HasIndex("DividendeID");

                    b.ToTable("DividendeErhalten");
                });

            modelBuilder.Entity("Aktien.Data.Model.AktienModels.OrderHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AktieID")
                        .HasColumnType("integer");

                    b.Property<int>("Anzahl")
                        .HasColumnType("integer");

                    b.Property<int>("BuySell")
                        .HasColumnType("integer");

                    b.Property<double?>("Fremdkostenzuschlag")
                        .HasColumnType("double precision");

                    b.Property<int>("KaufartTyp")
                        .HasColumnType("integer");

                    b.Property<int>("OrderartTyp")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Orderdatum")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("Preis")
                        .HasColumnType("double precision");

                    b.HasKey("ID");

                    b.HasIndex("AktieID");

                    b.ToTable("OrderHistory");
                });

            modelBuilder.Entity("Aktien.Data.Model.DepotModels.Depot", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Bezeichnung")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Depot");
                });

            modelBuilder.Entity("Aktien.Data.Model.DepotModels.DepotAktie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AktieID")
                        .HasColumnType("integer");

                    b.Property<int>("Anzahl")
                        .HasColumnType("integer");

                    b.Property<double>("BuyIn")
                        .HasColumnType("double precision");

                    b.Property<int>("DepotID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("AktieID");

                    b.HasIndex("DepotID");

                    b.ToTable("DepotAktien");
                });

            modelBuilder.Entity("Aktien.Data.Model.AktienModels.Dividende", b =>
                {
                    b.HasOne("Aktien.Data.Model.AktienModels.Aktie", "Aktie")
                        .WithMany("Dividenden")
                        .HasForeignKey("AktieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aktien.Data.Model.AktienModels.DividendeErhalten", b =>
                {
                    b.HasOne("Aktien.Data.Model.AktienModels.Aktie", "Aktie")
                        .WithMany("ErhalteneDividenden")
                        .HasForeignKey("AktieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aktien.Data.Model.AktienModels.Dividende", "Dividende")
                        .WithMany()
                        .HasForeignKey("DividendeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aktien.Data.Model.AktienModels.OrderHistory", b =>
                {
                    b.HasOne("Aktien.Data.Model.AktienModels.Aktie", "Aktie")
                        .WithMany("OrderHistories")
                        .HasForeignKey("AktieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aktien.Data.Model.DepotModels.DepotAktie", b =>
                {
                    b.HasOne("Aktien.Data.Model.AktienModels.Aktie", "Aktie")
                        .WithMany()
                        .HasForeignKey("AktieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aktien.Data.Model.DepotModels.Depot", "Depot")
                        .WithMany("DepotAktien")
                        .HasForeignKey("DepotID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
